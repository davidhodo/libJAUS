/*
 * ex: set ro:
 * DO NOT EDIT.
 * generated by smc (http://smc.sourceforge.net/)
 * from file : GlobalPoseSensor_SendFSM_sm.sm
 */

#include "urn_jaus_jss_mobility_GlobalPoseSensor_1_0/Messages/MessageSet.h"
#include "urn_jaus_jss_mobility_GlobalPoseSensor_1_0/GlobalPoseSensor_SendFSM.h"
#include "include/urn_jaus_jss_mobility_GlobalPoseSensor_1_0/GlobalPoseSensor_SendFSM_sm.h"

using namespace statemap;

namespace urn_jaus_jss_mobility_GlobalPoseSensor_1_0
{
    // Static class declarations.
    GlobalPoseSensor_SendFSM_SM_Sending GlobalPoseSensor_SendFSM_SM::Sending("GlobalPoseSensor_SendFSM_SM::Sending", 0);
    GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE("GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE", 1);

    void GlobalPoseSensor_SendFSMState::BroadcastGlobalTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::BroadcastLocalTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::CancelEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::CreateEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::EventErrorTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::EventOccurredTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryAuthorityTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryEventsTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryGeomagneticPropertyTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryGlobalPoseTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::QueryTimeoutTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::ReceiveTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::ReleaseControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::RequestControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::SendTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::SetAuthorityTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::SetGeomagneticPropertyTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::SetGlobalPoseTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::TimeoutTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::UpdateEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {
        Default(context);
        return;
    }

    void GlobalPoseSensor_SendFSMState::Default(GlobalPoseSensor_SendFSMContext& context)
    {
        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "TRANSITION   : Default"
                << std::endl;
        }

        throw (
            TransitionUndefinedException(
                context.getState().getName(),
                context.getTransition()));

        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastGlobalTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::BroadcastLocalTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::CancelEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::CancelEventTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::CancelEventTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::CreateEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::CreateEventTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::CreateEventTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::EventErrorTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::EventErrorTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::EventErrorTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::EventOccurredTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::EventOccurredTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::EventOccurredTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryAuthorityTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryAuthorityTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryAuthorityTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryControlTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryControlTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryEventsTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryEventsTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryEventsTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryGeomagneticPropertyTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryGeomagneticPropertyTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryGeomagneticPropertyTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryGlobalPoseTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryGlobalPoseTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryGlobalPoseTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::QueryTimeoutTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryTimeoutTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::QueryTimeoutTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReceiveTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReceiveTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReceiveTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::ReleaseControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReleaseControlTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::ReleaseControlTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::RequestControlTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::RequestControlTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::RequestControlTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::SendTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SendTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SendTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::SetAuthorityTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetAuthorityTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetAuthorityTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::SetGeomagneticPropertyTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetGeomagneticPropertyTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetGeomagneticPropertyTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::SetGlobalPoseTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetGlobalPoseTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::SetGlobalPoseTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::TimeoutTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::TimeoutTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::TimeoutTransition()"
                << std::endl;
        }


        return;
    }

    void GlobalPoseSensor_SendFSM_SM_Internally_Generated_State_DO_NOT_USE::UpdateEventTransition(GlobalPoseSensor_SendFSMContext& context)
    {

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "LEAVING STATE   : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE"
            << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "ENTER TRANSITION: GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::UpdateEventTransition()"
                << std::endl;
        }

        if (context.getDebugFlag() == true)
        {
            std::ostream& str = context.getDebugStream();

            str << "EXIT TRANSITION : GlobalPoseSensor_SendFSM_SM::Internally_Generated_State_DO_NOT_USE::UpdateEventTransition()"
                << std::endl;
        }


        return;
    }
}

/*
 * Local variables:
 *  buffer-read-only: t
 * End:
 */
