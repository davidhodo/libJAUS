VariantDir('Build', '.', duplicate=0)
sources = ['Build/InternalEvents/BroadcastGlobal.cpp', 'Build/InternalEvents/BroadcastLocal.cpp', 'Build/InternalEvents/EventError.cpp', 'Build/InternalEvents/EventOccurred.cpp', 'Build/Messages/CancelEvent.cpp', 'Build/Messages/ConfirmEventRequest.cpp', 'Build/Messages/CreateEvent.cpp', 'Build/Messages/Event.cpp', 'Build/Messages/QueryEvents.cpp', 'Build/Messages/QueryVelocityState.cpp', 'Build/Messages/RejectEventRequest.cpp', 'Build/Messages/ReportEvents.cpp', 'Build/Messages/ReportVelocityState.cpp', 'Build/Messages/UpdateEvent.cpp', 'Build/VelocityStateSensorService.cpp', 'Build/VelocityStateSensor_ReceiveFSM.cpp', 'Build/VelocityStateSensor_ReceiveFSM_sm.cpp', 'Build/VelocityStateSensor_SendFSM.cpp', 'Build/VelocityStateSensor_SendFSM_sm.cpp']
Import('env')
lib = env.SharedLibrary('./lib/VelocityStateSensorService', sources, LIBS=['Common', 'EventsService', 'TransportService'])
env.Install( env['INSTALL_LIB'], lib )
env.Install( env['BINPATH'], lib )
