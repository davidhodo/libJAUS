VariantDir('Build', '.', duplicate=0)
sources = ['Build/InternalEvents/BroadcastGlobal.cpp', 'Build/InternalEvents/BroadcastLocal.cpp', 'Build/InternalEvents/EventError.cpp', 'Build/InternalEvents/EventOccurred.cpp', 'Build/InternalEvents/Failure.cpp', 'Build/InternalEvents/Initialized.cpp', 'Build/InternalEvents/Timeout.cpp', 'Build/Messages/CancelEvent.cpp', 'Build/Messages/ClearEmergency.cpp', 'Build/Messages/ConfirmControl.cpp', 'Build/Messages/ConfirmEventRequest.cpp', 'Build/Messages/CreateEvent.cpp', 'Build/Messages/Event.cpp', 'Build/Messages/QueryAuthority.cpp', 'Build/Messages/QueryControl.cpp', 'Build/Messages/QueryEvents.cpp', 'Build/Messages/QueryStatus.cpp', 'Build/Messages/QueryTimeout.cpp', 'Build/Messages/QueryWrenchEffort.cpp', 'Build/Messages/RejectControl.cpp', 'Build/Messages/RejectEventRequest.cpp', 'Build/Messages/ReleaseControl.cpp', 'Build/Messages/ReportAuthority.cpp', 'Build/Messages/ReportControl.cpp', 'Build/Messages/ReportEvents.cpp', 'Build/Messages/ReportStatus.cpp', 'Build/Messages/ReportTimeout.cpp', 'Build/Messages/ReportWrenchEffort.cpp', 'Build/Messages/RequestControl.cpp', 'Build/Messages/Reset.cpp', 'Build/Messages/Resume.cpp', 'Build/Messages/SetAuthority.cpp', 'Build/Messages/SetEmergency.cpp', 'Build/Messages/SetWrenchEffort.cpp', 'Build/Messages/Shutdown.cpp', 'Build/Messages/Standby.cpp', 'Build/Messages/UpdateEvent.cpp', 'Build/PrimitiveDriverService.cpp', 'Build/PrimitiveDriver_ReceiveFSM.cpp', 'Build/PrimitiveDriver_ReceiveFSM_sm.cpp', 'Build/PrimitiveDriver_SendFSM.cpp', 'Build/PrimitiveDriver_SendFSM_sm.cpp']
Import('env')
lib = env.SharedLibrary('./lib/PrimitiveDriverService', sources, LIBS=['Common', 'ManagementService', 'AccessControlService', 'EventsService', 'TransportService'])
env.Install( env['INSTALL_LIB'], lib )
env.Install( env['BINPATH'], lib )
